version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: myapp_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - myapp_network

  auth:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.auth
    container_name: auth_service
    environment:
      APP_SERVER_PORT: 8081
      APP_DATABASE_HOST: postgres
      APP_DATABASE_PORT: 5432
      APP_DATABASE_USER: postgres
      APP_DATABASE_PASSWORD: postgres
      APP_DATABASE_DBNAME: myapp
      APP_DATABASE_SSLMODE: disable
      APP_JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      APP_LOGGER_LEVEL: info
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - myapp_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  myapp_network:
    driver: bridge


